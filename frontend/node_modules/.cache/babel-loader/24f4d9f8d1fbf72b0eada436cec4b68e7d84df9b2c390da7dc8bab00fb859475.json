{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linga\\\\portofolio\\\\frontend\\\\src\\\\components\\\\AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      ReactGA.event({\n        category: 'User',\n        action: 'Paused Audio'\n      });\n    } else {\n      audioRef.current.play();\n      ReactGA.event({\n        category: 'User',\n        action: 'Played Audio'\n      });\n    }\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"./FEN.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioPlayer, \"sL4xjVLmTF7f1+jWdlUm6K/Qvq0=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioPlayer","_s","isPlaying","setIsPlaying","audioRef","togglePlay","current","pause","ReactGA","event","category","action","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/linga/portofolio/frontend/src/components/AudioPlayer.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nfunction AudioPlayer() {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  const togglePlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Paused Audio',\r\n      });\r\n    } else {\r\n      audioRef.current.play();\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Played Audio',\r\n      });\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-player\">\r\n      <audio ref={audioRef} src=\"./FEN.mp3\" />\r\n      <button onClick={togglePlay}>\r\n        {isPlaying ? 'Pause' : 'Play'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AudioPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIH,SAAS,EAAE;MACbE,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBC,OAAO,CAACC,KAAK,CAAC;QACZC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,QAAQ,CAACE,OAAO,CAACM,IAAI,CAAC,CAAC;MACvBJ,OAAO,CAACC,KAAK,CAAC;QACZC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACAR,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAOgB,GAAG,EAAEX,QAAS;MAACY,GAAG,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCrB,OAAA;MAAQsB,OAAO,EAAEhB,UAAW;MAAAS,QAAA,EACzBZ,SAAS,GAAG,OAAO,GAAG;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA7BQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}